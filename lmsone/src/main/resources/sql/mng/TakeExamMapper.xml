<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.mng.dao.TakeExamDao">

   <!-- 시험 목록 조회 -->
	<select id="listTexam" resultType="map">
		/*kr.happy.study.mng.dao.TakeExamDao.listTexam*/
		SELECT	a.class_no AS classNo
			 ,	a.class_nm AS classNm
			 ,	a.class_startdate AS classStartdate
			 ,	a.class_enddate AS classEnddate
			 ,	IF(a.class_enddate >= NOW(), '진행중', '종료') AS state
			 ,	IF((SELECT GROUP_CONCAT(q_solution) FROM tb_question WHERE class_no = classNo AND q_type = 'A' ORDER BY q_no ASC) IS NULL, 'F', 'T') AS isNullA
			 ,	IF((SELECT GROUP_CONCAT(q_solution) FROM tb_question WHERE class_no = classNo AND q_type = 'B' ORDER BY q_no ASC) IS NULL, 'F', 'T') AS isNullB
			 ,	IF((SELECT GROUP_CONCAT(q_solution) FROM tb_question WHERE class_no = classNo AND q_type = 'C' ORDER BY q_no ASC) IS NULL, 'F', 'T') AS isNullC
		  FROM	tb_classinfo a INNER JOIN tb_courselist b ON a.class_no = b.class_no
		 WHERE	b.loginID = #{loginID}
			<if test="(texamname != null) and (!texamname.equals(''))">
					AND a.class_nm LIKE CONCAT('%', #{texamname}, '%')
			</if>
			<if test="(sKey != null) and (!sKey.equals('')) and (!sKey.equals('key_all'))">
				<choose>
					<when test="sKey eq 'key_pro'.toString()">
						AND a.class_enddate <![CDATA[>=]]>NOW()
					</when>
					<when test="sKey eq 'key_end'.toString()">
						AND a.class_enddate <![CDATA[<]]>NOW()
					</when>
					<otherwise>
						AND 1=2
					</otherwise>
				</choose>
 			</if>
 	 ORDER BY classEnddate DESC
		LIMIT #{pageIndex}, #{pageSize}
	</select>
	
	<!-- 시험 목록 총 개수 조회 -->
	<select id="countListTexam" resultType="int">
		/*kr.happy.study.mng.dao.TakeExamDao.countListTexam*/
		SELECT	COUNT(*) AS cnt
		  FROM	tb_classinfo a INNER JOIN tb_courselist b ON a.class_no = b.class_no
		 WHERE	b.loginID = #{loginID}
			<if test="(texamname != null) and (!texamname.equals(''))">
					AND a.class_nm LIKE CONCAT('%', #{texamname}, '%')
			</if>
			<if test="(sKey != null) and (!sKey.equals('')) and (!sKey.equals('key_all'))">
				<choose>
					<when test="sKey eq 'key_pro'.toString()">
						AND a.class_enddate <![CDATA[>=]]>NOW()
					</when>
					<when test="sKey eq 'key_end'.toString()">
						AND a.class_enddate <![CDATA[<]]>NOW()
					</when>
					<otherwise>
						AND 1=2
					</otherwise>
				</choose>
 			</if>
	</select>
	
	<!-- 문항 작성 수 확인 -->
	<select id="takeExamChk" resultType="int">
		/*kr.happy.study.mng.dao.TakeExamDao.takeExamChk*/
		SELECT	COUNT(1) AS inputAnswerCnt
		  FROM	tb_answer
		 WHERE	loginID = #{loginID}
		   AND	class_no = #{classNo};
	</select>

	<!-- 시험 정보 가져오기 -->
	<select id="takeExamGetInfo" resultType="map">
		/*kr.happy.study.mng.dao.TakeExamDao.takeExamGetInfo*/
		SELECT	(SELECT name FROM tb_userinfo WHERE loginID = #{loginID}) AS userName
			 ,	(SELECT class_nm FROM tb_classinfo WHERE class_no = #{classNo}) AS className
			<!--  ,	(SELECT COUNT(1) FROM tb_question WHERE class_no = #{classNo} AND q_type = #{examType}) AS questionCnt -->	 
	</select>
	
	<!-- 시험 문항 조회 -->
	<select id="callQuestionList" resultType="map">
		/*kr.happy.study.mng.dao.TakeExamDao.callQuestionList*/
		SELECT	q_no AS qNo
             ,	q_content AS question
             ,	q_1 AS one
             ,	q_2 AS two
             ,	q_3 AS three
             ,	q_4 AS four
		  FROM	tb_question
		 WHERE	class_no = #{classNo}
		   AND	q_type = #{examType}
 	  ORDER BY 	q_no ASC
	</select>
	
	<!-- 시험 문항 수 조회 -->
	<select id="callQuestionListCnt" resultType="int">
		/*kr.happy.study.mng.dao.TakeExamDao.callQuestionListCnt*/
		SELECT	COUNT(1) AS qlistCnt
		  FROM	tb_question
		 WHERE	class_no = #{classNo}
		   AND	q_type = #{examType}
	</select>
	
	<!-- 답안 제출 -->
	<insert id="submitExam" parameterType="java.util.HashMap">
		/*kr.happy.study.mng.dao.ExamDao.submitExam*/
		<if test="answerMapList.size != 0">
			INSERT <!-- IGNORE --> INTO tb_answer
			(
				  class_no, q_type, q_no, answer, loginID
			)
			VALUES
			<foreach collection="answerMapList" item="item" separator=",">
			(
					#{classNo}
				,	#{qType}
				,	#{item.qNo}
				,	#{item.answer}
				, 	#{loginID}
			)
			</foreach>
			ON DUPLICATE KEY UPDATE class_no = VALUES(class_no), q_type = VALUES(q_type), q_no = VALUES(q_no), loginID = VALUES(loginID)
		</if>
	</insert>
	
	<!-- DB에서 정답 가져오기 -->
	<select id="solGroup" resultType="string">
		/*kr.happy.study.mng.dao.ExamMemberDao.solGroup*/
		SELECT	(SELECT GROUP_CONCAT(q_solution) FROM tb_question WHERE class_no = #{classNo} AND q_type = #{qType} ORDER BY q_no ASC) AS solGroup
	</select>
	
	<!-- qNo를 순서대로 출력(시험 중도 종료 시) -->
	<select id="selectQno" resultType="string">
		/*kr.happy.study.mng.dao.TakeExamDao.selectQno*/
		SELECT	GROUP_CONCAT(q_no) AS qNoGroup
		  FROM	tb_question
		 WHERE	class_no = #{classNo}
		   AND	q_type = #{qType}
	</select>
	
	<!-- DB에 학생 점수 UPDATE -->
	<update id="updateScore">
		/*kr.happy.study.mng.dao.ExamDao.updateScore*/
		UPDATE	tb_courselist SET
				q_type = #{qType}
			,	score = #{score}
		WHERE	class_no = #{classNo}
		  AND	loginID = #{loginID}
	</update>
</mapper>