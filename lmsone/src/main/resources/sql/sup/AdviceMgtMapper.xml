<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="kr.happyjob.study.sup.dao.AdviceMgtDao">
	
	<!-- 과정 목록 조회 -->
	<select id="listCourse" resultType="kr.happyjob.study.sup.model.CourseModel">
		/*kr.happy.study.sup.dao.AdviceMgtDao.listCourse*/
		SELECT		
				 c.class_no as class_no
			,	 u.name as name
			,  c.class_nm as class_nm
			,  c.class_startdate as class_startdate
			,  c.class_enddate as class_enddate
			
		FROM	tb_classinfo c
		LEFT JOIN tb_userinfo u
    ON c.loginID = u.loginID
        
		<where>
		c.delete_yn != 'y'
			<if test="(sname != null) and (!sname.equals(''))">
				<choose>
					<when
						test="oname eq 'class_nm'.toString()">
						AND c.class_nm LIKE CONCAT('%', #{sname}, '%')
					</when>
				</choose>
			</if>
		</where>
		
		ORDER BY c.class_startdate DESC
		LIMIT #{pageIndex}, #{pageSize}
		
	</select>
	
	<!-- 과정 공지 목록 총 갯수 조회 -->
	<select id="countListCourse" resultType="int">
		/*kr.happy.study.sup.dao.AdviceMgtDao.countListCourse*/
		SELECT COUNT(1) AS tot_cnt 
		FROM tb_classinfo c
		LEFT JOIN tb_userinfo u
		ON c.loginID = u.loginID
			<where>
			c.delete_yn != 'y'
			<if test="(sname != null) and (!sname.equals(''))">
				<choose>
					<when
						test="oname eq 'class_nm'.toString()">
						AND c.class_nm LIKE CONCAT('%', #{sname}, '%')
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 수강 학생 목록 조회 -->
	<select id="listUser" resultType="kr.happyjob.study.sup.model.AdviceMgtModel">
		/*kr.happy.study.sup.dao.AdviceMgtDao.listUser*/
		
		SELECT		
		  c.class_no as class_no
		, c.score as score  
    , u.name as s_name
    , u.loginID as loginID
			
		FROM	tb_courselist c
		LEFT JOIN tb_userinfo u
    ON c.loginID = u.loginID
    WHERE c.class_no = #{class_no}
		
		ORDER BY u.name DESC
		LIMIT #{pageIndex}, #{pageSize}
		
	</select>
	
	<!-- 수강 학생 목록 총 갯수 조회 -->
	<select id="countListUser" resultType="int">
		/*kr.happy.study.sup.dao.AdviceMgtDao.countListUser*/
		SELECT COUNT(1)
		FROM tb_courselist c
		LEFT JOIN tb_userinfo u
		ON c.loginID = u.loginID
		WHERE c.class_no = #{class_no}
	</select>
	
	<!-- 상담 목록 조회 -->
	<select id="listAdvice" resultType="kr.happyjob.study.sup.model.AdviceMgtModel">
		/*kr.happy.study.sup.dao.AdviceMgtDao.listAdvice*/
		
		SELECT		
		      DATE_FORMAT(c.consult_date, '%Y-%m-%d') as consult_date
      	, c.consult_place as consult_place
      	, c.consult_no as consult_no
      	, c.consult_content as consult_content
		    , (SELECT u.name FROM tb_classinfo c LEFT JOIN tb_userinfo u ON c.loginID = u.loginID WHERE class_no = #{class_no}) as t_name
   	 	  , ui.name as s_name
			
		FROM	tb_consult c
		LEFT JOIN tb_userinfo ui ON c.loginID = ui.loginID
    WHERE c.loginID = #{loginID}
    	
    ORDER BY c.consult_date DESC
    LIMIT #{pageIndex}, #{pageSize}
		
	</select>
	
		<!-- 상담 조회 -->
	<select id="selectConsult" resultType="kr.happyjob.study.sup.model.AdviceMgtModel">
		/*kr.happy.study.sup.dao.AdviceMgtDao.selectConsult*/
		
		SELECT		
		      DATE_FORMAT(c.consult_date, '%Y-%m-%d') as consult_date
      	, c.consult_place as consult_place
      	, c.consult_no as consult_no
      	, c.consult_content as consult_content
			
		FROM	tb_consult c
    WHERE c.consult_no = #{consult_no}
		
	</select>
	
	<!-- 상담 목록 총 갯수 조회 -->
	<select id="countListAdvice" resultType="int">
		/*kr.happy.study.sup.dao.AdviceMgtDao.countListAdvice*/
		SELECT COUNT(1)
		FROM tb_consult c
		LEFT JOIN tb_userinfo ui ON c.loginID = ui.loginID
		WHERE c.loginID = #{loginID}
	</select>
	
	 <!-- 상담 등록 -->
  <insert id="insertConsult">
    /*kr.happy.study.sup.dao.AdviceMgtDao.insertConsult*/
        
    INSERT INTO tb_consult
    (
        loginID, class_no, consult_date, consult_place, consult_content
    )
    VALUES
    (
        #{loginID}
      , #{class_no}
      , #{consult_date}
      , #{consult_place}
      , #{consult_content}
    )   
  </insert>
  
  	<!-- 상담 수정 -->
	<update id="updateConsult">
		/*kr.happy.study.system.dao.ComnCodDao.updateConsult*/
		UPDATE tb_consult SET
				consult_date = #{consult_date}
			,	consult_place = #{consult_place}
			, consult_content = #{consult_content}
			
		WHERE	consult_no = #{consult_no}
	</update>
	 
</mapper>